@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<CascadingValue Value="new DragDropService<IParaphrase>()">
    <DraggableItemSource @ref="dropZone" TItem="IParaphrase" Title="1" Items="@(new List<IParaphrase>() {new B("Isaac", 21), new A("Johnny")})">
        <ItemRenderer>
            <h1 style="color: red">@context.Paraphrase()</h1>
        </ItemRenderer>
    </DraggableItemSource>

    <DraggableItemSource @ref="dropZone2" TItem="IParaphrase" Title="2" Items="@(new List<IParaphrase>() {new B("Bob", 12)})" RenewableItems="true">
        <ItemRenderer>
            <h1 style="color: blue">@context.Paraphrase() - @(((B)context).age)</h1>
        </ItemRenderer>
    </DraggableItemSource>

    <DragDropZone @ref="dropZone3" TItem="IParaphrase" Title="3" CanReorder="true" Class="d-flex flex-column">
        <ItemRenderer>
            <div @ondragend:stopPropagation @ondragover:stopPropagation @ondragenter:stopPropagation @ondrag:stopPropagation>
                <DragDropZone TItem="IParaphrase" Title="Row" CanReorder="true" Class="d-flex flex-row">
                    <ItemRenderer Context="inner">
                        <h1 style="color: pink">@inner.Paraphrase()</h1>
                    </ItemRenderer>
                </DragDropZone>
            </div>
        </ItemRenderer>
    </DragDropZone>

    <DragDropZone TItem="IParaphrase" Title="4" ShowItems="true">
        <ItemRenderer>
            <h1 style="color: yellow">@(((B)context).name) - @(((B)context).age)</h1>
        </ItemRenderer>
    </DragDropZone>
</CascadingValue>

@code {
    DraggableItemSource<IParaphrase> dropZone;
    DraggableItemSource<IParaphrase> dropZone2;
    DragDropZone<IParaphrase> dropZone3;

    protected override void OnAfterRender(bool firstRender)
    {
        // dropZone3.DropItem(new C(41));
        base.OnAfterRender(firstRender);
    }

    interface IParaphrase
    {
        public string Paraphrase();
    }

    class A : IParaphrase
    {
        public string name;

        public A(string n)
        {
            name = n;
        }

        public string Paraphrase()
        {
            return name;
        }
    }

    class B : A
    {
        public int age;

        public B(string n, int a) : base(n)
        {
            age = a;
        }

        public new string Paraphrase()
        {
            return name + " (B)";
        }
    }

    class C : IParaphrase
    {
        public int num;

        public C(int n)
        {
            num = n;
        }

        public string Paraphrase()
        {
            return num.ToString();
        }
    }

}